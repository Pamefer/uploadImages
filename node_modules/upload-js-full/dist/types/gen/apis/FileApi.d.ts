/**
 * upload-api
 * Upload API
 *
 * The version of the OpenAPI document: 2.0.0
 * Contact: hello@upload.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from "../runtime";
import type { AsyncResponse, CopyFileBatchRequest, CopyFileRequest, CopyFileResponse, DeleteFileBatchRequest, FileDetails, ProcessFileAndSaveRequest, ProcessFileAndSaveResponse } from "../models";
export interface CopyFileOperationParams {
    accountId: string;
    copyFileRequest: CopyFileRequest;
}
export interface CopyFileBatchOperationParams {
    accountId: string;
    copyFileBatchRequest: CopyFileBatchRequest;
}
export interface DeleteFileParams {
    accountId: string;
    filePath: string;
}
export interface DeleteFileBatchOperationParams {
    accountId: string;
    deleteFileBatchRequest: DeleteFileBatchRequest;
}
export interface DownloadFileParams {
    accountId: string;
    filePath: string;
    cache?: boolean;
    cacheTtl?: number;
    version?: string;
}
export interface GetFileDetailsParams {
    accountId: string;
    filePath: string;
}
export interface ProcessFileParams {
    accountId: string;
    filePath: string;
    transformation: string;
    artifact?: string;
    cache?: boolean;
    cachePerm?: ProcessFileCachePermEnum;
    cacheTtl?: number;
    large?: boolean;
    version?: string;
}
export interface ProcessFileAndSaveOperationParams {
    accountId: string;
    filePath: string;
    transformation: string;
    processFileAndSaveRequest: ProcessFileAndSaveRequest;
}
/**
 *
 */
export declare class FileApi extends runtime.BaseAPI {
    /**
     * Copies a file synchronously.
     */
    private copyFileWithHttpInfo;
    /**
     * Copies a file synchronously.
     */
    copyFile(requestParameters: CopyFileOperationParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CopyFileResponse>;
    /**
     * Copies multiple files asynchronously.
     */
    private copyFileBatchWithHttpInfo;
    /**
     * Copies multiple files asynchronously.
     */
    copyFileBatch(requestParameters: CopyFileBatchOperationParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AsyncResponse>;
    /**
     * Deletes a file synchronously.
     */
    private deleteFileWithHttpInfo;
    /**
     * Deletes a file synchronously.
     */
    deleteFile(requestParameters: DeleteFileParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void>;
    /**
     * Deletes multiple files asynchronously.
     */
    private deleteFileBatchWithHttpInfo;
    /**
     * Deletes multiple files asynchronously.
     */
    deleteFileBatch(requestParameters: DeleteFileBatchOperationParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<AsyncResponse>;
    /**
     * Downloads a file in its original/unprocessed state.
     */
    private downloadFileWithHttpInfo;
    /**
     * Downloads a file in its original/unprocessed state.
     */
    downloadFile(requestParameters: DownloadFileParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.BinaryResult>;
    /**
     * Gets the full details (e.g. metadata, tags, etc.) for a file.
     */
    private getFileDetailsWithHttpInfo;
    /**
     * Gets the full details (e.g. metadata, tags, etc.) for a file.
     */
    getFileDetails(requestParameters: GetFileDetailsParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<FileDetails>;
    /**
     * Processes a file and returns the result.
     */
    private processFileWithHttpInfo;
    /**
     * Processes a file and returns the result.
     */
    processFile(requestParameters: ProcessFileParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.BinaryResult>;
    /**
     * Processes a file and saves the result.
     */
    private processFileAndSaveWithHttpInfo;
    /**
     * Processes a file and saves the result.
     */
    processFileAndSave(requestParameters: ProcessFileAndSaveOperationParams, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<ProcessFileAndSaveResponse>;
}
/**
 * @export
 */
export declare const ProcessFileCachePermEnum: {
    readonly Auto: "auto";
    readonly False: "false";
    readonly True: "true";
};
export declare type ProcessFileCachePermEnum = typeof ProcessFileCachePermEnum[keyof typeof ProcessFileCachePermEnum];
